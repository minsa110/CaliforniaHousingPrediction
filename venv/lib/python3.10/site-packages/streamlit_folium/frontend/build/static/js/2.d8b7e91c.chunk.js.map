{"version":3,"sources":["../node_modules/@babel/runtime/regenerator/index.js","../node_modules/underscore/modules/_setup.js","../node_modules/streamlit-component-lib/node_modules/react/index.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/AwaitValue.js","../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../fb/File.ts","../visitor/builderctor.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/underscore/modules/restArguments.js","../node_modules/underscore/modules/isObject.js","../node_modules/underscore/modules/isNull.js","../node_modules/underscore/modules/isUndefined.js","../node_modules/underscore/modules/isBoolean.js","../node_modules/underscore/modules/isElement.js","../node_modules/underscore/modules/_tagTester.js","../node_modules/underscore/modules/isString.js","../node_modules/underscore/modules/isNumber.js","../node_modules/underscore/modules/isDate.js","../node_modules/underscore/modules/isRegExp.js","../node_modules/underscore/modules/isError.js","../node_modules/underscore/modules/isSymbol.js","../node_modules/underscore/modules/isArrayBuffer.js","../node_modules/underscore/modules/isFunction.js","../node_modules/underscore/modules/_hasObjectTag.js","../node_modules/underscore/modules/_stringTagBug.js","../node_modules/underscore/modules/isDataView.js","../node_modules/underscore/modules/isArray.js","../node_modules/underscore/modules/_has.js","../node_modules/underscore/modules/isArguments.js","../node_modules/underscore/modules/isFinite.js","../node_modules/underscore/modules/isNaN.js","../node_modules/underscore/modules/constant.js","../node_modules/underscore/modules/_createSizePropertyCheck.js","../node_modules/underscore/modules/_shallowProperty.js","../node_modules/underscore/modules/_getByteLength.js","../node_modules/underscore/modules/_isBufferLike.js","../node_modules/underscore/modules/isTypedArray.js","../node_modules/underscore/modules/_getLength.js","../node_modules/underscore/modules/_collectNonEnumProps.js","../node_modules/underscore/modules/keys.js","../node_modules/underscore/modules/isEmpty.js","../node_modules/underscore/modules/isMatch.js","../node_modules/underscore/modules/underscore.js","../node_modules/underscore/modules/_toBufferView.js","../node_modules/underscore/modules/isEqual.js","../node_modules/underscore/modules/allKeys.js","../node_modules/underscore/modules/_methodFingerprint.js","../node_modules/underscore/modules/isMap.js","../node_modules/underscore/modules/isWeakMap.js","../node_modules/underscore/modules/isSet.js","../node_modules/underscore/modules/isWeakSet.js","../node_modules/underscore/modules/values.js","../node_modules/underscore/modules/pairs.js","../node_modules/underscore/modules/invert.js","../node_modules/underscore/modules/functions.js","../node_modules/underscore/modules/_createAssigner.js","../node_modules/underscore/modules/extend.js","../node_modules/underscore/modules/extendOwn.js","../node_modules/underscore/modules/defaults.js","../node_modules/underscore/modules/_baseCreate.js","../node_modules/underscore/modules/create.js","../node_modules/underscore/modules/clone.js","../node_modules/underscore/modules/tap.js","../node_modules/underscore/modules/toPath.js","../node_modules/underscore/modules/_toPath.js","../node_modules/underscore/modules/_deepGet.js","../node_modules/underscore/modules/get.js","../node_modules/underscore/modules/has.js","../node_modules/underscore/modules/identity.js","../node_modules/underscore/modules/matcher.js","../node_modules/underscore/modules/property.js","../node_modules/underscore/modules/_optimizeCb.js","../node_modules/underscore/modules/_baseIteratee.js","../node_modules/underscore/modules/iteratee.js","../node_modules/underscore/modules/_cb.js","../node_modules/underscore/modules/mapObject.js","../node_modules/underscore/modules/noop.js","../node_modules/underscore/modules/propertyOf.js","../node_modules/underscore/modules/times.js","../node_modules/underscore/modules/random.js","../node_modules/underscore/modules/now.js","../node_modules/underscore/modules/_createEscaper.js","../node_modules/underscore/modules/_escapeMap.js","../node_modules/underscore/modules/escape.js","../node_modules/underscore/modules/unescape.js","../node_modules/underscore/modules/_unescapeMap.js","../node_modules/underscore/modules/templateSettings.js","../node_modules/underscore/modules/template.js","../node_modules/underscore/modules/result.js","../node_modules/underscore/modules/uniqueId.js","../node_modules/underscore/modules/chain.js","../node_modules/underscore/modules/_executeBound.js","../node_modules/underscore/modules/partial.js","../node_modules/underscore/modules/bind.js","../node_modules/underscore/modules/_isArrayLike.js","../node_modules/underscore/modules/_flatten.js","../node_modules/underscore/modules/bindAll.js","../node_modules/underscore/modules/memoize.js","../node_modules/underscore/modules/delay.js","../node_modules/underscore/modules/defer.js","../node_modules/underscore/modules/throttle.js","../node_modules/underscore/modules/debounce.js","../node_modules/underscore/modules/wrap.js","../node_modules/underscore/modules/negate.js","../node_modules/underscore/modules/compose.js","../node_modules/underscore/modules/after.js","../node_modules/underscore/modules/before.js","../node_modules/underscore/modules/once.js","../node_modules/underscore/modules/findKey.js","../node_modules/underscore/modules/_createPredicateIndexFinder.js","../node_modules/underscore/modules/findIndex.js","../node_modules/underscore/modules/findLastIndex.js","../node_modules/underscore/modules/sortedIndex.js","../node_modules/underscore/modules/_createIndexFinder.js","../node_modules/underscore/modules/indexOf.js","../node_modules/underscore/modules/lastIndexOf.js","../node_modules/underscore/modules/find.js","../node_modules/underscore/modules/findWhere.js","../node_modules/underscore/modules/each.js","../node_modules/underscore/modules/map.js","../node_modules/underscore/modules/_createReduce.js","../node_modules/underscore/modules/reduce.js","../node_modules/underscore/modules/reduceRight.js","../node_modules/underscore/modules/filter.js","../node_modules/underscore/modules/reject.js","../node_modules/underscore/modules/every.js","../node_modules/underscore/modules/some.js","../node_modules/underscore/modules/contains.js","../node_modules/underscore/modules/invoke.js","../node_modules/underscore/modules/pluck.js","../node_modules/underscore/modules/where.js","../node_modules/underscore/modules/max.js","../node_modules/underscore/modules/min.js","../node_modules/underscore/modules/toArray.js","../node_modules/underscore/modules/sample.js","../node_modules/underscore/modules/shuffle.js","../node_modules/underscore/modules/sortBy.js","../node_modules/underscore/modules/_group.js","../node_modules/underscore/modules/groupBy.js","../node_modules/underscore/modules/indexBy.js","../node_modules/underscore/modules/countBy.js","../node_modules/underscore/modules/partition.js","../node_modules/underscore/modules/size.js","../node_modules/underscore/modules/_keyInObj.js","../node_modules/underscore/modules/pick.js","../node_modules/underscore/modules/omit.js","../node_modules/underscore/modules/initial.js","../node_modules/underscore/modules/first.js","../node_modules/underscore/modules/rest.js","../node_modules/underscore/modules/last.js","../node_modules/underscore/modules/compact.js","../node_modules/underscore/modules/flatten.js","../node_modules/underscore/modules/difference.js","../node_modules/underscore/modules/without.js","../node_modules/underscore/modules/uniq.js","../node_modules/underscore/modules/union.js","../node_modules/underscore/modules/intersection.js","../node_modules/underscore/modules/unzip.js","../node_modules/underscore/modules/zip.js","../node_modules/underscore/modules/object.js","../node_modules/underscore/modules/range.js","../node_modules/underscore/modules/chunk.js","../node_modules/underscore/modules/_chainResult.js","../node_modules/underscore/modules/mixin.js","../node_modules/underscore/modules/underscore-array-methods.js","../node_modules/underscore/modules/index-default.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/streamlit-component-lib/node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/webpack/buildin/global.js"],"names":["module","exports","VERSION","root","self","global","Function","ArrayProto","Array","prototype","ObjProto","Object","SymbolProto","Symbol","push","slice","toString","hasOwnProperty","supportsArrayBuffer","ArrayBuffer","supportsDataView","DataView","nativeIsArray","isArray","nativeKeys","keys","nativeCreate","create","nativeIsView","isView","_isNaN","isNaN","_isFinite","isFinite","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","MAX_ARRAY_INDEX","Math","pow","require","privateData","WeakMap","wrappers","pd","event","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","this","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","value","enumerable","i","length","key","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","wrapper","BaseEvent","CustomEvent","call","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","node","listenerType","listener","next","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","types","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","o","minLen","n","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","iterator","F","s","done","e","_e","f","normalCompletion","didErr","step","_e2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","fn","args","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_slicedToArray","_i","_s","_arr","_n","_d","_AwaitValue","wrapped","_awaitAsyncGenerator","AsyncGenerator","front","back","resume","result","wrappedAwait","settle","_invoke","request","_wrapAsyncGenerator","asyncIterator","_asyncIterator","iterable","method","async","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","ret","thr","_asyncGeneratorDelegate","inner","awaitWrap","iter","waiting","pump","flatbuffers","inRange","a","min","max","ToDictionary","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","Error","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","j","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","pop","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","decode","input","byteOffset","byteLength","input_stream","code_points","indexOf","cp","codePointsToString","encode","opt_string","string","u","d","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","toUint8Array","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","_setPrototypeOf","p","__proto__","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_typeof","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","ITERATOR_DONE","freeze","ArrowJSON","_json","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","_values","resolvers","_closedPromise","_closedPromiseResolve","reason","return","_ensureOpen","_error","streamAdapters","_","abort","close","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigIntCtor","BigIntAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayCtor","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayCtor","isNumber","isBoolean","isFunction","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","isReadableDOMStream","isWritableDOMStream","isWritableNodeStream","isReadableNodeStream","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","src","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","index","Infinity","toArrayBufferView","ArrayBufferViewCtor","BYTES_PER_ELEMENT","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toBigInt64Array","toUint16Array","toUint32Array","Uint32Array","toBigUint64Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","ArrayCtor","wrap","buffers","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","emit","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","fromAsyncIterable","fromDOMStream","fromNodeStream","byteRange","cmd","bufferLength","threw","throw","AdaptiveByteReader","releaseLock","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","onEvent","cleanup","events","evt","destroy","race","map","_defineProperty","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","_superPropBase","property","receiver","base","desc","org","flatbuf","arrow","apache","AbstractVector","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","Schema_","BufferType","Message_","iterateBits","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","values","xs","begin","context","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","cnt","pos","view","popcnt_uint32","getUint32","getUint16","getUint8","uint32","_toConsumableArray","Visitor","nodes","visit","getVisitFn","throwIfNotFound","_node","visitor","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","schema","compareFields","fields","others","every","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","children","compareInterval","indices","dictionary","comparer","toStringTag","ArrayType","Int_","Date_","Time_","Timestamp_","Interval_","child","valueType","join","Union_","typeIdToChildIndex","idx","Map_","atomicDictionaryId","getId","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","roundLengthUpToNearest64Bytes","BPE","sliceOrExtendArray","BufferBuilder","_resize","extra","reserved","array","DataBufferBuilder","reserve","BitmapBufferBuilder","numValid","val","cur","OffsetsBufferBuilder","WideBufferBuilder","_ArrayType64","buffer64","ArrayType64","nulls","_nulls","_isValid","new","flush","numInvalid","_offsets","_typeIds","reservedLength","reservedByteLength","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","last","queueingStrategy","highWaterMark","sizeProperty","numChunks","append","toVector","throughIterable","throughAsyncIterable","FixedWidthBuilder","opts","VariableWidthBuilder","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","concat","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","Parent","Class","bind","bignumToString","bignumToBigInt","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","signed","words","number","decimalToString","digits","base64","base32","checks","reverse","toJSON","hint","assign","memo","BN","num","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","toBigInt","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","BinaryBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","kr","vr","k","v","has","callbackfn","thisArg","callback","m","str","MapRow","createRowProxy","getChildAt","StructRow","defineRowProxyProperties","findIndex","tmp","row","getter","setter","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","clampIndex","adjust","clampRange","end","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","chunk","isDictionary","_indices","flatten","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","element","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","vectors","selectChunkArgs","Column","_field","SingleChunkColumn","metadata","column","rest","some","_chunk","selectArgs","Ctor","vals","_selectArgs","selectColumnArgs","_selectFieldArgs","selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","res","toKeysAndValues","entries","fieldIndex","valueIndex","dictionaries","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","m1","m2","ListBuilder","_run","run","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","SparseUnionBuilder","DenseUnionBuilder","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","values64","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","GetBuilderCtor","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","numRecordBatches","block","getRecordBatch","numDictionaries","getDictionaryBatch","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","rb","FileBlock","startDictionariesVector","db","dictionaryBatchesOffset","finishFooterBuffer","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","closed","cancel","RandomAccessFile","readAt","getInt32","nBytes","AsyncRandomAccessFile","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","BaseInt64","L","R","product","lessThan","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","JSONVectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","binaryDataFromJSON","isBool","isUtf8","joined","TypeAssembler","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","schemaFieldsFromJSON","_schema","fromJSON","fieldChildrenFromJSON","fieldNodes","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_isDelta","_id","decodeFieldNodes","batch","nodesLength","decodeBuffers","bufferRegions","buffersLength","decodeSchemaFields","fieldsLength","decodeFieldChildren","childrenLength","decodeCustomMetadata","entry","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","batches","flattenDataSources","MAGIC_STR","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","RangeError","isNull","addBuffer","_nullV","assembler","vectorChildren","assembleResult","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writeAll","writeAllAsync","reset","sink","objectMode","_writeFooter","compareTo","_writeSchema","payload","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","assemble","_writeDictionaries","_writeBodyBuffers","padding","_writeDictionaryBatch","writableStrategy","readableStrategy","RecordBatchStreamWriter","writer","RecordBatchFileWriter","_writeMagic","noopBuf","nullBufs","bitmapLength","ensureSameLengthData","batchLength","l","batchData","_changeLengthAndBackfillNullBitmap","distributeColumnsIntoRecordBatches","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","numColumns","Number","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","BaseVector","_bindDataAccessors","VectorName","isConcatSpreadable","BinaryVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","DateMillisecondVector","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","Float32Vector","Float64Vector","typeCtor","dataCtor","ctor","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","is64bit","convert32To64Bit","Int8Vector","Int16Vector","Int32Vector","Int64Vector","_values64","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","MapVector","NullVector","StructVector","_row","bound","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","ByteWidthVisitor","____","visitFields","GetVectorConstructor","newDataType","getVectorConstructor","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","partialType0","getColumnAt","getColumnIndex","Writer","nameToIndex","selectAt","columnName","newIdx","oldToNew","_f","_fs","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","cols","_dictionaries","DictionaryCollector","collect","fs","vs","readAllSync","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","fromFileHandle","fromAsyncByteStream","RecordBatchFileReader","RecordBatchFileReaderImpl","RecordBatchStreamReaderImpl","fromByteStream","readAllAsync","AsyncRecordBatchStreamReader","AsyncRecordBatchFileReader","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","AsyncRecordBatchStreamReaderImpl","_readFooter","_readDictionaryBatch","seek","AsyncRecordBatchFileReaderImpl","BuilderTransform","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","Col","colidx","Predicate","expr","And","Or","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","accum","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","func","countBy","DataFrame","scan","scanReverse","predicate","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_predicate","isBound","and","util_bn_","util_int_","util_bit_","util_math_","util_buffer_","util_vector_","bm","hwm","pull","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","_this","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","numCols","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__","_super","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","PureComponent","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","restArguments","startIndex","isUndefined","isElement","nodeType","tagTester","tag","nodelist","childNodes","hasStringTagBug","hasObjectTag","isIE11","isDataView","getInt8","isArrayBuffer","isArguments","isSymbol","parseFloat","constant","createSizePropertyCheck","getSizeProperty","collection","shallowProperty","getByteLength","typedArrayPattern","isBufferLike","collectNonEnumProps","hash","contains","emulatedSet","nonEnumIdx","prop","isEmpty","getLength","isString","isMatch","attrs","_keys","_wrapped","toBufferView","bufferSource","tagDataView","aStack","bStack","deepEq","className","areArrays","aCtor","bCtor","isEqual","allKeys","ie11fingerprint","methods","weakMapMethods","forEachName","commonInit","mapTail","mapMethods","setMethods","pairs","invert","functions","sort","createAssigner","keysFunc","defaults","baseCreate","extendOwn","extend","tap","interceptor","toPath","path","deepGet","_has","identity","matcher","optimizeCb","argCount","accumulator","baseIteratee","iteratee","cb","mapObject","results","currentKey","noop","propertyOf","random","getTime","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","replace","escapeMap","templateSettings","evaluate","interpolate","escape","noMatch","escapes","escapeRegExp","escapeChar","bareIdentifier","template","text","settings","oldSettings","argument","variable","fallback","idCounter","uniqueId","prefix","chain","_chain","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","placeholder","callArgs","depth","strict","output","isArrayLike","memoize","hasher","cache","address","wait","setTimeout","delay","throttle","timeout","previous","later","leading","throttled","_now","clearTimeout","trailing","debounce","immediate","passed","debounced","_args","compose","after","before","findKey","createPredicateIndexFinder","dir","sortedIndex","createIndexFinder","predicateFind","item","findLastIndex","find","findWhere","each","createReduce","reducer","initial","list","guard","contextPath","pluck","where","computed","lastComputed","reStrSymbol","sample","rand","shuffle","sortBy","criteria","behavior","partition","pass","keyInObj","pick","first","compact","_flatten","otherArrays","difference","uniq","isSorted","seen","arrays","intersection","argsLength","unzip","range","stop","chainResult","mixin","allExports","g","q","w","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","U","V","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","toObject","test1","test2","test3","split","letter","shouldUseNative","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iteratorMethod","isGeneratorFunction","genFun","mark","awrap","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis"],"mappings":"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","file":"static/js/2.d8b7e91c.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","// Current version.\nexport var VERSION = '1.13.3';\n\n// Establish the root object, `window` (`self`) in the browser, `global`\n// on the server, or `this` in some virtual machines. We use `self`\n// instead of `window` for `WebWorker` support.\nexport var root = (typeof self == 'object' && self.self === self && self) ||\n          (typeof global == 'object' && global.global === global && global) ||\n          Function('return this')() ||\n          {};\n\n// Save bytes in the minified (but not gzipped) version:\nexport var ArrayProto = Array.prototype, ObjProto = Object.prototype;\nexport var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nexport var push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n// Modern feature detection.\nexport var supportsArrayBuffer = typeof ArrayBuffer !== 'undefined',\n    supportsDataView = typeof DataView !== 'undefined';\n\n// All **ECMAScript 5+** native function implementations that we hope to use\n// are declared here.\nexport var nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeCreate = Object.create,\n    nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;\n\n// Create references to these builtin functions because we override them.\nexport var _isNaN = isNaN,\n    _isFinite = isFinite;\n\n// Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\nexport var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\nexport var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n  'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n// The largest integer that can be represented exactly.\nexport var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _AwaitValue(value) {\n  this.wrapped = value;\n}","import AwaitValue from \"./AwaitValue.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}","import AwaitValue from \"./AwaitValue.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nAsyncGenerator.prototype[typeof Symbol === \"function\" && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n};\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","export default function _asyncIterator(iterable) {\n  var method,\n      async,\n      sync,\n      retry = 2;\n\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}\n\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","export default function _asyncGeneratorDelegate(inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  iter[typeof Symbol !== \"undefined\" && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  };\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner[\"throw\"] === \"function\") {\n    iter[\"throw\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner[\"return\"] === \"function\") {\n    iter[\"return\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n}","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n","// Is a given variable an object?\nexport default function isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || (type === 'object' && !!obj);\n}\n","// Is a given value equal to null?\nexport default function isNull(obj) {\n  return obj === null;\n}\n","// Is a given variable undefined?\nexport default function isUndefined(obj) {\n  return obj === void 0;\n}\n","import { toString } from './_setup.js';\n\n// Is a given value a boolean?\nexport default function isBoolean(obj) {\n  return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n}\n","// Is a given value a DOM element?\nexport default function isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n","import { toString } from './_setup.js';\n\n// Internal function for creating a `toString`-based type tester.\nexport default function tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function(obj) {\n    return toString.call(obj) === tag;\n  };\n}\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('String');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Number');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Date');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('RegExp');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Error');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Symbol');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('ArrayBuffer');\n","import tagTester from './_tagTester.js';\nimport { root } from './_setup.js';\n\nvar isFunction = tagTester('Function');\n\n// Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\n// v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\nvar nodelist = root.document && root.document.childNodes;\nif (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport default isFunction;\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Object');\n","import { supportsDataView } from './_setup.js';\nimport hasObjectTag from './_hasObjectTag.js';\n\n// In IE 10 - Edge 13, `DataView` has string tag `'[object Object]'`.\n// In IE 11, the most common among them, this problem also applies to\n// `Map`, `WeakMap` and `Set`.\nexport var hasStringTagBug = (\n      supportsDataView && hasObjectTag(new DataView(new ArrayBuffer(8)))\n    ),\n    isIE11 = (typeof Map !== 'undefined' && hasObjectTag(new Map));\n","import tagTester from './_tagTester.js';\nimport isFunction from './isFunction.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport { hasStringTagBug } from './_stringTagBug.js';\n\nvar isDataView = tagTester('DataView');\n\n// In IE 10 - Edge 13, we need a different heuristic\n// to determine whether an object is a `DataView`.\nfunction ie10IsDataView(obj) {\n  return obj != null && isFunction(obj.getInt8) && isArrayBuffer(obj.buffer);\n}\n\nexport default (hasStringTagBug ? ie10IsDataView : isDataView);\n","import { nativeIsArray } from './_setup.js';\nimport tagTester from './_tagTester.js';\n\n// Is a given value an array?\n// Delegates to ECMA5's native `Array.isArray`.\nexport default nativeIsArray || tagTester('Array');\n","import { hasOwnProperty } from './_setup.js';\n\n// Internal function to check whether `key` is an own property name of `obj`.\nexport default function has(obj, key) {\n  return obj != null && hasOwnProperty.call(obj, key);\n}\n","import tagTester from './_tagTester.js';\nimport has from './_has.js';\n\nvar isArguments = tagTester('Arguments');\n\n// Define a fallback version of the method in browsers (ahem, IE < 9), where\n// there isn't any inspectable \"Arguments\" type.\n(function() {\n  if (!isArguments(arguments)) {\n    isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n}());\n\nexport default isArguments;\n","import { _isFinite } from './_setup.js';\nimport isSymbol from './isSymbol.js';\n\n// Is a given object a finite number?\nexport default function isFinite(obj) {\n  return !isSymbol(obj) && _isFinite(obj) && !isNaN(parseFloat(obj));\n}\n","import { _isNaN } from './_setup.js';\nimport isNumber from './isNumber.js';\n\n// Is the given value `NaN`?\nexport default function isNaN(obj) {\n  return isNumber(obj) && _isNaN(obj);\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function constant(value) {\n  return function() {\n    return value;\n  };\n}\n","import { MAX_ARRAY_INDEX } from './_setup.js';\n\n// Common internal logic for `isArrayLike` and `isBufferLike`.\nexport default function createSizePropertyCheck(getSizeProperty) {\n  return function(collection) {\n    var sizeProperty = getSizeProperty(collection);\n    return typeof sizeProperty == 'number' && sizeProperty >= 0 && sizeProperty <= MAX_ARRAY_INDEX;\n  }\n}\n","// Internal helper to generate a function to obtain property `key` from `obj`.\nexport default function shallowProperty(key) {\n  return function(obj) {\n    return obj == null ? void 0 : obj[key];\n  };\n}\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `byteLength` property of an object.\nexport default shallowProperty('byteLength');\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getByteLength from './_getByteLength.js';\n\n// Internal helper to determine whether we should spend extensive checks against\n// `ArrayBuffer` et al.\nexport default createSizePropertyCheck(getByteLength);\n","import { supportsArrayBuffer, nativeIsView, toString } from './_setup.js';\nimport isDataView from './isDataView.js';\nimport constant from './constant.js';\nimport isBufferLike from './_isBufferLike.js';\n\n// Is a given value a typed array?\nvar typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\nfunction isTypedArray(obj) {\n  // `ArrayBuffer.isView` is the most future-proof, so use it when available.\n  // Otherwise, fall back on the above regular expression.\n  return nativeIsView ? (nativeIsView(obj) && !isDataView(obj)) :\n                isBufferLike(obj) && typedArrayPattern.test(toString.call(obj));\n}\n\nexport default supportsArrayBuffer ? isTypedArray : constant(false);\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `length` property of an object.\nexport default shallowProperty('length');\n","import { nonEnumerableProps, ObjProto } from './_setup.js';\nimport isFunction from './isFunction.js';\nimport has from './_has.js';\n\n// Internal helper to create a simple lookup structure.\n// `collectNonEnumProps` used to depend on `_.contains`, but this led to\n// circular imports. `emulatedSet` is a one-off solution that only works for\n// arrays of strings.\nfunction emulatedSet(keys) {\n  var hash = {};\n  for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\n  return {\n    contains: function(key) { return hash[key] === true; },\n    push: function(key) {\n      hash[key] = true;\n      return keys.push(key);\n    }\n  };\n}\n\n// Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\n// be iterated by `for key in ...` and thus missed. Extends `keys` in place if\n// needed.\nexport default function collectNonEnumProps(obj, keys) {\n  keys = emulatedSet(keys);\n  var nonEnumIdx = nonEnumerableProps.length;\n  var constructor = obj.constructor;\n  var proto = (isFunction(constructor) && constructor.prototype) || ObjProto;\n\n  // Constructor is a special case.\n  var prop = 'constructor';\n  if (has(obj, prop) && !keys.contains(prop)) keys.push(prop);\n\n  while (nonEnumIdx--) {\n    prop = nonEnumerableProps[nonEnumIdx];\n    if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\n      keys.push(prop);\n    }\n  }\n}\n","import isObject from './isObject.js';\nimport { nativeKeys, hasEnumBug } from './_setup.js';\nimport has from './_has.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve the names of an object's own properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`.\nexport default function keys(obj) {\n  if (!isObject(obj)) return [];\n  if (nativeKeys) return nativeKeys(obj);\n  var keys = [];\n  for (var key in obj) if (has(obj, key)) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isArray from './isArray.js';\nimport isString from './isString.js';\nimport isArguments from './isArguments.js';\nimport keys from './keys.js';\n\n// Is a given array, string, or object empty?\n// An \"empty\" object has no enumerable own-properties.\nexport default function isEmpty(obj) {\n  if (obj == null) return true;\n  // Skip the more expensive `toString`-based type checks if `obj` has no\n  // `.length`.\n  var length = getLength(obj);\n  if (typeof length == 'number' && (\n    isArray(obj) || isString(obj) || isArguments(obj)\n  )) return length === 0;\n  return getLength(keys(obj)) === 0;\n}\n","import keys from './keys.js';\n\n// Returns whether an object has a given set of `key:value` pairs.\nexport default function isMatch(object, attrs) {\n  var _keys = keys(attrs), length = _keys.length;\n  if (object == null) return !length;\n  var obj = Object(object);\n  for (var i = 0; i < length; i++) {\n    var key = _keys[i];\n    if (attrs[key] !== obj[key] || !(key in obj)) return false;\n  }\n  return true;\n}\n","import { VERSION } from './_setup.js';\n\n// If Underscore is called as a function, it returns a wrapped object that can\n// be used OO-style. This wrapper holds altered versions of all functions added\n// through `_.mixin`. Wrapped objects may be chained.\nexport default function _(obj) {\n  if (obj instanceof _) return obj;\n  if (!(this instanceof _)) return new _(obj);\n  this._wrapped = obj;\n}\n\n_.VERSION = VERSION;\n\n// Extracts the result from a wrapped and chained object.\n_.prototype.value = function() {\n  return this._wrapped;\n};\n\n// Provide unwrapping proxies for some methods used in engine operations\n// such as arithmetic and JSON stringification.\n_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n_.prototype.toString = function() {\n  return String(this._wrapped);\n};\n","import getByteLength from './_getByteLength.js';\n\n// Internal function to wrap or shallow-copy an ArrayBuffer,\n// typed array or DataView to a new view, reusing the buffer.\nexport default function toBufferView(bufferSource) {\n  return new Uint8Array(\n    bufferSource.buffer || bufferSource,\n    bufferSource.byteOffset || 0,\n    getByteLength(bufferSource)\n  );\n}\n","import _ from './underscore.js';\nimport { toString, SymbolProto } from './_setup.js';\nimport getByteLength from './_getByteLength.js';\nimport isTypedArray from './isTypedArray.js';\nimport isFunction from './isFunction.js';\nimport { hasStringTagBug }  from './_stringTagBug.js';\nimport isDataView from './isDataView.js';\nimport keys from './keys.js';\nimport has from './_has.js';\nimport toBufferView from './_toBufferView.js';\n\n// We use this string twice, so give it a name for minification.\nvar tagDataView = '[object DataView]';\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction eq(a, b, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  // `null` or `undefined` only equal to itself (strict comparison).\n  if (a == null || b == null) return false;\n  // `NaN`s are equivalent, but non-reflexive.\n  if (a !== a) return b !== b;\n  // Exhaust primitive checks\n  var type = typeof a;\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n  return deepEq(a, b, aStack, bStack);\n}\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction deepEq(a, b, aStack, bStack) {\n  // Unwrap any wrapped objects.\n  if (a instanceof _) a = a._wrapped;\n  if (b instanceof _) b = b._wrapped;\n  // Compare `[[Class]]` names.\n  var className = toString.call(a);\n  if (className !== toString.call(b)) return false;\n  // Work around a bug in IE 10 - Edge 13.\n  if (hasStringTagBug && className == '[object Object]' && isDataView(a)) {\n    if (!isDataView(b)) return false;\n    className = tagDataView;\n  }\n  switch (className) {\n    // These types are compared by value.\n    case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n    case '[object String]':\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return '' + a === '' + b;\n    case '[object Number]':\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) return +b !== +b;\n      // An `egal` comparison is performed for other numeric values.\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n    case '[object Date]':\n    case '[object Boolean]':\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n    case '[object Symbol]':\n      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    case '[object ArrayBuffer]':\n    case tagDataView:\n      // Coerce to typed array so we can fall through.\n      return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\n  }\n\n  var areArrays = className === '[object Array]';\n  if (!areArrays && isTypedArray(a)) {\n      var byteLength = getByteLength(a);\n      if (byteLength !== getByteLength(b)) return false;\n      if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\n      areArrays = true;\n  }\n  if (!areArrays) {\n    if (typeof a != 'object' || typeof b != 'object') return false;\n\n    // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\n                             isFunction(bCtor) && bCtor instanceof bCtor)\n                        && ('constructor' in a && 'constructor' in b)) {\n      return false;\n    }\n  }\n  // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) return bStack[length] === b;\n  }\n\n  // Add the first object to the stack of traversed objects.\n  aStack.push(a);\n  bStack.push(b);\n\n  // Recursively compare objects and arrays.\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n    if (length !== b.length) return false;\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (length--) {\n      if (!eq(a[length], b[length], aStack, bStack)) return false;\n    }\n  } else {\n    // Deep compare objects.\n    var _keys = keys(a), key;\n    length = _keys.length;\n    // Ensure that both objects contain the same number of properties before comparing deep equality.\n    if (keys(b).length !== length) return false;\n    while (length--) {\n      // Deep compare each member\n      key = _keys[length];\n      if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n    }\n  }\n  // Remove the first object from the stack of traversed objects.\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\n// Perform a deep comparison to check if two objects are equal.\nexport default function isEqual(a, b) {\n  return eq(a, b);\n}\n","import isObject from './isObject.js';\nimport { hasEnumBug } from './_setup.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve all the enumerable property names of an object.\nexport default function allKeys(obj) {\n  if (!isObject(obj)) return [];\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isFunction from './isFunction.js';\nimport allKeys from './allKeys.js';\n\n// Since the regular `Object.prototype.toString` type tests don't work for\n// some types in IE 11, we use a fingerprinting heuristic instead, based\n// on the methods. It's not great, but it's the best we got.\n// The fingerprint method lists are defined below.\nexport function ie11fingerprint(methods) {\n  var length = getLength(methods);\n  return function(obj) {\n    if (obj == null) return false;\n    // `Map`, `WeakMap` and `Set` have no enumerable keys.\n    var keys = allKeys(obj);\n    if (getLength(keys)) return false;\n    for (var i = 0; i < length; i++) {\n      if (!isFunction(obj[methods[i]])) return false;\n    }\n    // If we are testing against `WeakMap`, we need to ensure that\n    // `obj` doesn't have a `forEach` method in order to distinguish\n    // it from a regular `Map`.\n    return methods !== weakMapMethods || !isFunction(obj[forEachName]);\n  };\n}\n\n// In the interest of compact minification, we write\n// each string in the fingerprints only once.\nvar forEachName = 'forEach',\n    hasName = 'has',\n    commonInit = ['clear', 'delete'],\n    mapTail = ['get', hasName, 'set'];\n\n// `Map`, `WeakMap` and `Set` each have slightly different\n// combinations of the above sublists.\nexport var mapMethods = commonInit.concat(forEachName, mapTail),\n    weakMapMethods = commonInit.concat(mapTail),\n    setMethods = ['add'].concat(commonInit, forEachName, hasName);\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, mapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(mapMethods) : tagTester('Map');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, weakMapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(weakMapMethods) : tagTester('WeakMap');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, setMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(setMethods) : tagTester('Set');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('WeakSet');\n","import keys from './keys.js';\n\n// Retrieve the values of an object's properties.\nexport default function values(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var values = Array(length);\n  for (var i = 0; i < length; i++) {\n    values[i] = obj[_keys[i]];\n  }\n  return values;\n}\n","import keys from './keys.js';\n\n// Convert an object into a list of `[key, value]` pairs.\n// The opposite of `_.object` with one argument.\nexport default function pairs(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var pairs = Array(length);\n  for (var i = 0; i < length; i++) {\n    pairs[i] = [_keys[i], obj[_keys[i]]];\n  }\n  return pairs;\n}\n","import keys from './keys.js';\n\n// Invert the keys and values of an object. The values must be serializable.\nexport default function invert(obj) {\n  var result = {};\n  var _keys = keys(obj);\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    result[obj[_keys[i]]] = _keys[i];\n  }\n  return result;\n}\n","import isFunction from './isFunction.js';\n\n// Return a sorted list of the function names available on the object.\nexport default function functions(obj) {\n  var names = [];\n  for (var key in obj) {\n    if (isFunction(obj[key])) names.push(key);\n  }\n  return names.sort();\n}\n","// An internal function for creating assigner functions.\nexport default function createAssigner(keysFunc, defaults) {\n  return function(obj) {\n    var length = arguments.length;\n    if (defaults) obj = Object(obj);\n    if (length < 2 || obj == null) return obj;\n    for (var index = 1; index < length; index++) {\n      var source = arguments[index],\n          keys = keysFunc(source),\n          l = keys.length;\n      for (var i = 0; i < l; i++) {\n        var key = keys[i];\n        if (!defaults || obj[key] === void 0) obj[key] = source[key];\n      }\n    }\n    return obj;\n  };\n}\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Extend a given object with all the properties in passed-in object(s).\nexport default createAssigner(allKeys);\n","import createAssigner from './_createAssigner.js';\nimport keys from './keys.js';\n\n// Assigns a given object with all the own properties in the passed-in\n// object(s).\n// (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\nexport default createAssigner(keys);\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Fill in a given object with default properties.\nexport default createAssigner(allKeys, true);\n","import isObject from './isObject.js';\nimport { nativeCreate } from './_setup.js';\n\n// Create a naked function reference for surrogate-prototype-swapping.\nfunction ctor() {\n  return function(){};\n}\n\n// An internal function for creating a new object that inherits from another.\nexport default function baseCreate(prototype) {\n  if (!isObject(prototype)) return {};\n  if (nativeCreate) return nativeCreate(prototype);\n  var Ctor = ctor();\n  Ctor.prototype = prototype;\n  var result = new Ctor;\n  Ctor.prototype = null;\n  return result;\n}\n","import baseCreate from './_baseCreate.js';\nimport extendOwn from './extendOwn.js';\n\n// Creates an object that inherits from the given prototype object.\n// If additional properties are provided then they will be added to the\n// created object.\nexport default function create(prototype, props) {\n  var result = baseCreate(prototype);\n  if (props) extendOwn(result, props);\n  return result;\n}\n","import isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport extend from './extend.js';\n\n// Create a (shallow-cloned) duplicate of an object.\nexport default function clone(obj) {\n  if (!isObject(obj)) return obj;\n  return isArray(obj) ? obj.slice() : extend({}, obj);\n}\n","// Invokes `interceptor` with the `obj` and then returns `obj`.\n// The primary purpose of this method is to \"tap into\" a method chain, in\n// order to perform operations on intermediate results within the chain.\nexport default function tap(obj, interceptor) {\n  interceptor(obj);\n  return obj;\n}\n","import _ from './underscore.js';\nimport isArray from './isArray.js';\n\n// Normalize a (deep) property `path` to array.\n// Like `_.iteratee`, this function can be customized.\nexport default function toPath(path) {\n  return isArray(path) ? path : [path];\n}\n_.toPath = toPath;\n","import _ from './underscore.js';\nimport './toPath.js';\n\n// Internal wrapper for `_.toPath` to enable minification.\n// Similar to `cb` for `_.iteratee`.\nexport default function toPath(path) {\n  return _.toPath(path);\n}\n","// Internal function to obtain a nested property in `obj` along `path`.\nexport default function deepGet(obj, path) {\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    if (obj == null) return void 0;\n    obj = obj[path[i]];\n  }\n  return length ? obj : void 0;\n}\n","import toPath from './_toPath.js';\nimport deepGet from './_deepGet.js';\nimport isUndefined from './isUndefined.js';\n\n// Get the value of the (deep) property on `path` from `object`.\n// If any property in `path` does not exist or if the value is\n// `undefined`, return `defaultValue` instead.\n// The `path` is normalized through `_.toPath`.\nexport default function get(object, path, defaultValue) {\n  var value = deepGet(object, toPath(path));\n  return isUndefined(value) ? defaultValue : value;\n}\n","import _has from './_has.js';\nimport toPath from './_toPath.js';\n\n// Shortcut function for checking if an object has a given property directly on\n// itself (in other words, not on a prototype). Unlike the internal `has`\n// function, this public version can also traverse nested properties.\nexport default function has(obj, path) {\n  path = toPath(path);\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    var key = path[i];\n    if (!_has(obj, key)) return false;\n    obj = obj[key];\n  }\n  return !!length;\n}\n","// Keep the identity function around for default iteratees.\nexport default function identity(value) {\n  return value;\n}\n","import extendOwn from './extendOwn.js';\nimport isMatch from './isMatch.js';\n\n// Returns a predicate for checking whether an object has a given set of\n// `key:value` pairs.\nexport default function matcher(attrs) {\n  attrs = extendOwn({}, attrs);\n  return function(obj) {\n    return isMatch(obj, attrs);\n  };\n}\n","import deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Creates a function that, when passed an object, will traverse that object’s\n// properties down the given `path`, specified as an array of keys or indices.\nexport default function property(path) {\n  path = toPath(path);\n  return function(obj) {\n    return deepGet(obj, path);\n  };\n}\n","// Internal function that returns an efficient (for current engines) version\n// of the passed-in callback, to be repeatedly applied in other Underscore\n// functions.\nexport default function optimizeCb(func, context, argCount) {\n  if (context === void 0) return func;\n  switch (argCount == null ? 3 : argCount) {\n    case 1: return function(value) {\n      return func.call(context, value);\n    };\n    // The 2-argument case is omitted because we’re not using it.\n    case 3: return function(value, index, collection) {\n      return func.call(context, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(context, accumulator, value, index, collection);\n    };\n  }\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n","import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\n\n// External wrapper for our callback generator. Users may customize\n// `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n// This abstraction hides the internal-only `argCount` argument.\nexport default function iteratee(value, context) {\n  return baseIteratee(value, context, Infinity);\n}\n_.iteratee = iteratee;\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\nimport iteratee from './iteratee.js';\n\n// The function we call internally to generate a callback. It invokes\n// `_.iteratee` if overridden, otherwise `baseIteratee`.\nexport default function cb(value, context, argCount) {\n  if (_.iteratee !== iteratee) return _.iteratee(value, context);\n  return baseIteratee(value, context, argCount);\n}\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the results of applying the `iteratee` to each element of `obj`.\n// In contrast to `_.map` it returns an object.\nexport default function mapObject(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = keys(obj),\n      length = _keys.length,\n      results = {};\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys[index];\n    results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function noop(){}\n","import noop from './noop.js';\nimport get from './get.js';\n\n// Generates a function for a given object that returns a given property.\nexport default function propertyOf(obj) {\n  if (obj == null) return noop;\n  return function(path) {\n    return get(obj, path);\n  };\n}\n","import optimizeCb from './_optimizeCb.js';\n\n// Run a function **n** times.\nexport default function times(n, iteratee, context) {\n  var accum = Array(Math.max(0, n));\n  iteratee = optimizeCb(iteratee, context, 1);\n  for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n  return accum;\n}\n","// Return a random integer between `min` and `max` (inclusive).\nexport default function random(min, max) {\n  if (max == null) {\n    max = min;\n    min = 0;\n  }\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n","// A (possibly faster) way to get the current timestamp as an integer.\nexport default Date.now || function() {\n  return new Date().getTime();\n};\n","import keys from './keys.js';\n\n// Internal helper to generate functions for escaping and unescaping strings\n// to/from HTML interpolation.\nexport default function createEscaper(map) {\n  var escaper = function(match) {\n    return map[match];\n  };\n  // Regexes for identifying a key that needs to be escaped.\n  var source = '(?:' + keys(map).join('|') + ')';\n  var testRegexp = RegExp(source);\n  var replaceRegexp = RegExp(source, 'g');\n  return function(string) {\n    string = string == null ? '' : '' + string;\n    return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n  };\n}\n","// Internal list of HTML entities for escaping.\nexport default {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\n","import createEscaper from './_createEscaper.js';\nimport escapeMap from './_escapeMap.js';\n\n// Function for escaping strings to HTML interpolation.\nexport default createEscaper(escapeMap);\n","import createEscaper from './_createEscaper.js';\nimport unescapeMap from './_unescapeMap.js';\n\n// Function for unescaping strings from HTML interpolation.\nexport default createEscaper(unescapeMap);\n","import invert from './invert.js';\nimport escapeMap from './_escapeMap.js';\n\n// Internal list of HTML entities for unescaping.\nexport default invert(escapeMap);\n","import _ from './underscore.js';\n\n// By default, Underscore uses ERB-style template delimiters. Change the\n// following template settings to use alternative delimiters.\nexport default _.templateSettings = {\n  evaluate: /<%([\\s\\S]+?)%>/g,\n  interpolate: /<%=([\\s\\S]+?)%>/g,\n  escape: /<%-([\\s\\S]+?)%>/g\n};\n","import defaults from './defaults.js';\nimport _ from './underscore.js';\nimport './templateSettings.js';\n\n// When customizing `_.templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n  \"'\": \"'\",\n  '\\\\': '\\\\',\n  '\\r': 'r',\n  '\\n': 'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction escapeChar(match) {\n  return '\\\\' + escapes[match];\n}\n\n// In order to prevent third-party code injection through\n// `_.templateSettings.variable`, we test it against the following regular\n// expression. It is intentionally a bit more liberal than just matching valid\n// identifiers, but still prevents possible loopholes through defaults or\n// destructuring assignment.\nvar bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/;\n\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n// NB: `oldSettings` only exists for backwards compatibility.\nexport default function template(text, settings, oldSettings) {\n  if (!settings && oldSettings) settings = oldSettings;\n  settings = defaults({}, settings, _.templateSettings);\n\n  // Combine delimiters into one regular expression via alternation.\n  var matcher = RegExp([\n    (settings.escape || noMatch).source,\n    (settings.interpolate || noMatch).source,\n    (settings.evaluate || noMatch).source\n  ].join('|') + '|$', 'g');\n\n  // Compile the template source, escaping string literals appropriately.\n  var index = 0;\n  var source = \"__p+='\";\n  text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n    index = offset + match.length;\n\n    if (escape) {\n      source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n    } else if (interpolate) {\n      source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n    } else if (evaluate) {\n      source += \"';\\n\" + evaluate + \"\\n__p+='\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offset.\n    return match;\n  });\n  source += \"';\\n\";\n\n  var argument = settings.variable;\n  if (argument) {\n    // Insure against third-party code injection. (CVE-2021-23358)\n    if (!bareIdentifier.test(argument)) throw new Error(\n      'variable is not a bare identifier: ' + argument\n    );\n  } else {\n    // If a variable is not specified, place data values in local scope.\n    source = 'with(obj||{}){\\n' + source + '}\\n';\n    argument = 'obj';\n  }\n\n  source = \"var __t,__p='',__j=Array.prototype.join,\" +\n    \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n    source + 'return __p;\\n';\n\n  var render;\n  try {\n    render = new Function(argument, '_', source);\n  } catch (e) {\n    e.source = source;\n    throw e;\n  }\n\n  var template = function(data) {\n    return render.call(this, data, _);\n  };\n\n  // Provide the compiled source as a convenience for precompilation.\n  template.source = 'function(' + argument + '){\\n' + source + '}';\n\n  return template;\n}\n","import isFunction from './isFunction.js';\nimport toPath from './_toPath.js';\n\n// Traverses the children of `obj` along `path`. If a child is a function, it\n// is invoked with its parent as context. Returns the value of the final\n// child, or `fallback` if any child is undefined.\nexport default function result(obj, path, fallback) {\n  path = toPath(path);\n  var length = path.length;\n  if (!length) {\n    return isFunction(fallback) ? fallback.call(obj) : fallback;\n  }\n  for (var i = 0; i < length; i++) {\n    var prop = obj == null ? void 0 : obj[path[i]];\n    if (prop === void 0) {\n      prop = fallback;\n      i = length; // Ensure we don't continue iterating.\n    }\n    obj = isFunction(prop) ? prop.call(obj) : prop;\n  }\n  return obj;\n}\n","// Generate a unique integer id (unique within the entire client session).\n// Useful for temporary DOM ids.\nvar idCounter = 0;\nexport default function uniqueId(prefix) {\n  var id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n","import _ from './underscore.js';\n\n// Start chaining a wrapped Underscore object.\nexport default function chain(obj) {\n  var instance = _(obj);\n  instance._chain = true;\n  return instance;\n}\n","import baseCreate from './_baseCreate.js';\nimport isObject from './isObject.js';\n\n// Internal function to execute `sourceFunc` bound to `context` with optional\n// `args`. Determines whether to execute a function as a constructor or as a\n// normal function.\nexport default function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n  if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n  var self = baseCreate(sourceFunc.prototype);\n  var result = sourceFunc.apply(self, args);\n  if (isObject(result)) return result;\n  return self;\n}\n","import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js';\n\n// Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\nvar partial = restArguments(function(func, boundArgs) {\n  var placeholder = partial.placeholder;\n  var bound = function() {\n    var position = 0, length = boundArgs.length;\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n    while (position < arguments.length) args.push(arguments[position++]);\n    return executeBound(func, bound, this, this, args);\n  };\n  return bound;\n});\n\npartial.placeholder = _;\nexport default partial;\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport executeBound from './_executeBound.js';\n\n// Create a function bound to a given object (assigning `this`, and arguments,\n// optionally).\nexport default restArguments(function(func, context, args) {\n  if (!isFunction(func)) throw new TypeError('Bind must be called on a function');\n  var bound = restArguments(function(callArgs) {\n    return executeBound(func, bound, context, this, args.concat(callArgs));\n  });\n  return bound;\n});\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getLength from './_getLength.js';\n\n// Internal helper for collection methods to determine whether a collection\n// should be iterated as an array or as an object.\n// Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n// Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\nexport default createSizePropertyCheck(getLength);\n","import getLength from './_getLength.js';\nimport isArrayLike from './_isArrayLike.js';\nimport isArray from './isArray.js';\nimport isArguments from './isArguments.js';\n\n// Internal implementation of a recursive `flatten` function.\nexport default function flatten(input, depth, strict, output) {\n  output = output || [];\n  if (!depth && depth !== 0) {\n    depth = Infinity;\n  } else if (depth <= 0) {\n    return output.concat(input);\n  }\n  var idx = output.length;\n  for (var i = 0, length = getLength(input); i < length; i++) {\n    var value = input[i];\n    if (isArrayLike(value) && (isArray(value) || isArguments(value))) {\n      // Flatten current level of array or arguments object.\n      if (depth > 1) {\n        flatten(value, depth - 1, strict, output);\n        idx = output.length;\n      } else {\n        var j = 0, len = value.length;\n        while (j < len) output[idx++] = value[j++];\n      }\n    } else if (!strict) {\n      output[idx++] = value;\n    }\n  }\n  return output;\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport bind from './bind.js';\n\n// Bind a number of an object's methods to that object. Remaining arguments\n// are the method names to be bound. Useful for ensuring that all callbacks\n// defined on an object belong to it.\nexport default restArguments(function(obj, keys) {\n  keys = flatten(keys, false, false);\n  var index = keys.length;\n  if (index < 1) throw new Error('bindAll must be passed function names');\n  while (index--) {\n    var key = keys[index];\n    obj[key] = bind(obj[key], obj);\n  }\n  return obj;\n});\n","import has from './_has.js';\n\n// Memoize an expensive function by storing its results.\nexport default function memoize(func, hasher) {\n  var memoize = function(key) {\n    var cache = memoize.cache;\n    var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n    if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n    return cache[address];\n  };\n  memoize.cache = {};\n  return memoize;\n}\n","import restArguments from './restArguments.js';\n\n// Delays a function for the given number of milliseconds, and then calls\n// it with the arguments supplied.\nexport default restArguments(function(func, wait, args) {\n  return setTimeout(function() {\n    return func.apply(null, args);\n  }, wait);\n});\n","import partial from './partial.js';\nimport delay from './delay.js';\nimport _ from './underscore.js';\n\n// Defers a function, scheduling it to run after the current call stack has\n// cleared.\nexport default partial(delay, _, 1);\n","import now from './now.js';\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nexport default function throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function() {\n    var _now = now();\n    if (!previous && options.leading === false) previous = _now;\n    var remaining = wait - (_now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = _now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function() {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n","import restArguments from './restArguments.js';\nimport now from './now.js';\n\n// When a sequence of calls of the returned function ends, the argument\n// function is triggered. The end of a sequence is defined by the `wait`\n// parameter. If `immediate` is passed, the argument function will be\n// triggered at the beginning of the sequence instead of at the end.\nexport default function debounce(func, wait, immediate) {\n  var timeout, previous, args, result, context;\n\n  var later = function() {\n    var passed = now() - previous;\n    if (wait > passed) {\n      timeout = setTimeout(later, wait - passed);\n    } else {\n      timeout = null;\n      if (!immediate) result = func.apply(context, args);\n      // This check is needed because `func` can recursively invoke `debounced`.\n      if (!timeout) args = context = null;\n    }\n  };\n\n  var debounced = restArguments(function(_args) {\n    context = this;\n    args = _args;\n    previous = now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n      if (immediate) result = func.apply(context, args);\n    }\n    return result;\n  });\n\n  debounced.cancel = function() {\n    clearTimeout(timeout);\n    timeout = args = context = null;\n  };\n\n  return debounced;\n}\n","import partial from './partial.js';\n\n// Returns the first function passed as an argument to the second,\n// allowing you to adjust arguments, run code before and after, and\n// conditionally execute the original function.\nexport default function wrap(func, wrapper) {\n  return partial(wrapper, func);\n}\n","// Returns a negated version of the passed-in predicate.\nexport default function negate(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n","// Returns a function that is the composition of a list of functions, each\n// consuming the return value of the function that follows.\nexport default function compose() {\n  var args = arguments;\n  var start = args.length - 1;\n  return function() {\n    var i = start;\n    var result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n","// Returns a function that will only be executed on and after the Nth call.\nexport default function after(times, func) {\n  return function() {\n    if (--times < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n","// Returns a function that will only be executed up to (but not including) the\n// Nth call.\nexport default function before(times, func) {\n  var memo;\n  return function() {\n    if (--times > 0) {\n      memo = func.apply(this, arguments);\n    }\n    if (times <= 1) func = null;\n    return memo;\n  };\n}\n","import partial from './partial.js';\nimport before from './before.js';\n\n// Returns a function that will be executed at most one time, no matter how\n// often you call it. Useful for lazy initialization.\nexport default partial(before, 2);\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the first key on an object that passes a truth test.\nexport default function findKey(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = keys(obj), key;\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    key = _keys[i];\n    if (predicate(obj[key], key, obj)) return key;\n  }\n}\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Internal function to generate `_.findIndex` and `_.findLastIndex`.\nexport default function createPredicateIndexFinder(dir) {\n  return function(array, predicate, context) {\n    predicate = cb(predicate, context);\n    var length = getLength(array);\n    var index = dir > 0 ? 0 : length - 1;\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index], index, array)) return index;\n    }\n    return -1;\n  };\n}\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the first index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(1);\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the last index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(-1);\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Use a comparator function to figure out the smallest index at which\n// an object should be inserted so as to maintain order. Uses binary search.\nexport default function sortedIndex(array, obj, iteratee, context) {\n  iteratee = cb(iteratee, context, 1);\n  var value = iteratee(obj);\n  var low = 0, high = getLength(array);\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n    if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n  }\n  return low;\n}\n","import getLength from './_getLength.js';\nimport { slice } from './_setup.js';\nimport isNaN from './isNaN.js';\n\n// Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.\nexport default function createIndexFinder(dir, predicateFind, sortedIndex) {\n  return function(array, item, idx) {\n    var i = 0, length = getLength(array);\n    if (typeof idx == 'number') {\n      if (dir > 0) {\n        i = idx >= 0 ? idx : Math.max(idx + length, i);\n      } else {\n        length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n      }\n    } else if (sortedIndex && idx && length) {\n      idx = sortedIndex(array, item);\n      return array[idx] === item ? idx : -1;\n    }\n    if (item !== item) {\n      idx = predicateFind(slice.call(array, i, length), isNaN);\n      return idx >= 0 ? idx + i : -1;\n    }\n    for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n      if (array[idx] === item) return idx;\n    }\n    return -1;\n  };\n}\n","import sortedIndex from './sortedIndex.js';\nimport findIndex from './findIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the first occurrence of an item in an array,\n// or -1 if the item is not included in the array.\n// If the array is large and already in sort order, pass `true`\n// for **isSorted** to use binary search.\nexport default createIndexFinder(1, findIndex, sortedIndex);\n","import findLastIndex from './findLastIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the last occurrence of an item in an array,\n// or -1 if the item is not included in the array.\nexport default createIndexFinder(-1, findLastIndex);\n","import isArrayLike from './_isArrayLike.js';\nimport findIndex from './findIndex.js';\nimport findKey from './findKey.js';\n\n// Return the first value which passes a truth test.\nexport default function find(obj, predicate, context) {\n  var keyFinder = isArrayLike(obj) ? findIndex : findKey;\n  var key = keyFinder(obj, predicate, context);\n  if (key !== void 0 && key !== -1) return obj[key];\n}\n","import find from './find.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.find`: getting the first\n// object containing specific `key:value` pairs.\nexport default function findWhere(obj, attrs) {\n  return find(obj, matcher(attrs));\n}\n","import optimizeCb from './_optimizeCb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// The cornerstone for collection functions, an `each`\n// implementation, aka `forEach`.\n// Handles raw objects in addition to array-likes. Treats all\n// sparse array-likes as if they were dense.\nexport default function each(obj, iteratee, context) {\n  iteratee = optimizeCb(iteratee, context);\n  var i, length;\n  if (isArrayLike(obj)) {\n    for (i = 0, length = obj.length; i < length; i++) {\n      iteratee(obj[i], i, obj);\n    }\n  } else {\n    var _keys = keys(obj);\n    for (i = 0, length = _keys.length; i < length; i++) {\n      iteratee(obj[_keys[i]], _keys[i], obj);\n    }\n  }\n  return obj;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the results of applying the iteratee to each element.\nexport default function map(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length,\n      results = Array(length);\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    results[index] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// Internal helper to create a reducing function, iterating left or right.\nexport default function createReduce(dir) {\n  // Wrap code that reassigns argument variables in a separate function than\n  // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n  var reducer = function(obj, iteratee, memo, initial) {\n    var _keys = !isArrayLike(obj) && keys(obj),\n        length = (_keys || obj).length,\n        index = dir > 0 ? 0 : length - 1;\n    if (!initial) {\n      memo = obj[_keys ? _keys[index] : index];\n      index += dir;\n    }\n    for (; index >= 0 && index < length; index += dir) {\n      var currentKey = _keys ? _keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  return function(obj, iteratee, memo, context) {\n    var initial = arguments.length >= 3;\n    return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n  };\n}\n","import createReduce from './_createReduce.js';\n\n// **Reduce** builds up a single result from a list of values, aka `inject`,\n// or `foldl`.\nexport default createReduce(1);\n","import createReduce from './_createReduce.js';\n\n// The right-associative version of reduce, also known as `foldr`.\nexport default createReduce(-1);\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// Return all the elements that pass a truth test.\nexport default function filter(obj, predicate, context) {\n  var results = [];\n  predicate = cb(predicate, context);\n  each(obj, function(value, index, list) {\n    if (predicate(value, index, list)) results.push(value);\n  });\n  return results;\n}\n","import filter from './filter.js';\nimport negate from './negate.js';\nimport cb from './_cb.js';\n\n// Return all the elements for which a truth test fails.\nexport default function reject(obj, predicate, context) {\n  return filter(obj, negate(cb(predicate)), context);\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine whether all of the elements pass a truth test.\nexport default function every(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (!predicate(obj[currentKey], currentKey, obj)) return false;\n  }\n  return true;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine if at least one element in the object passes a truth test.\nexport default function some(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (predicate(obj[currentKey], currentKey, obj)) return true;\n  }\n  return false;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport indexOf from './indexOf.js';\n\n// Determine if the array or object contains a given item (using `===`).\nexport default function contains(obj, item, fromIndex, guard) {\n  if (!isArrayLike(obj)) obj = values(obj);\n  if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n  return indexOf(obj, item, fromIndex) >= 0;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport map from './map.js';\nimport deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Invoke a method (with arguments) on every item in a collection.\nexport default restArguments(function(obj, path, args) {\n  var contextPath, func;\n  if (isFunction(path)) {\n    func = path;\n  } else {\n    path = toPath(path);\n    contextPath = path.slice(0, -1);\n    path = path[path.length - 1];\n  }\n  return map(obj, function(context) {\n    var method = func;\n    if (!method) {\n      if (contextPath && contextPath.length) {\n        context = deepGet(context, contextPath);\n      }\n      if (context == null) return void 0;\n      method = context[path];\n    }\n    return method == null ? method : method.apply(context, args);\n  });\n});\n","import map from './map.js';\nimport property from './property.js';\n\n// Convenience version of a common use case of `_.map`: fetching a property.\nexport default function pluck(obj, key) {\n  return map(obj, property(key));\n}\n","import filter from './filter.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.filter`: selecting only\n// objects containing specific `key:value` pairs.\nexport default function where(obj, attrs) {\n  return filter(obj, matcher(attrs));\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the maximum element (or element-based computation).\nexport default function max(obj, iteratee, context) {\n  var result = -Infinity, lastComputed = -Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value > result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed > lastComputed || (computed === -Infinity && result === -Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the minimum element (or element-based computation).\nexport default function min(obj, iteratee, context) {\n  var result = Infinity, lastComputed = Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value < result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed < lastComputed || (computed === Infinity && result === Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArray from './isArray.js';\nimport { slice } from './_setup.js';\nimport isString from './isString.js';\nimport isArrayLike from './_isArrayLike.js';\nimport map from './map.js';\nimport identity from './identity.js';\nimport values from './values.js';\n\n// Safely create a real, live array from anything iterable.\nvar reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\nexport default function toArray(obj) {\n  if (!obj) return [];\n  if (isArray(obj)) return slice.call(obj);\n  if (isString(obj)) {\n    // Keep surrogate pair characters together.\n    return obj.match(reStrSymbol);\n  }\n  if (isArrayLike(obj)) return map(obj, identity);\n  return values(obj);\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\nimport toArray from './toArray.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = toArray(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}\n","import sample from './sample.js';\n\n// Shuffle a collection.\nexport default function shuffle(obj) {\n  return sample(obj, Infinity);\n}\n","import cb from './_cb.js';\nimport pluck from './pluck.js';\nimport map from './map.js';\n\n// Sort the object's values by a criterion produced by an iteratee.\nexport default function sortBy(obj, iteratee, context) {\n  var index = 0;\n  iteratee = cb(iteratee, context);\n  return pluck(map(obj, function(value, key, list) {\n    return {\n      value: value,\n      index: index++,\n      criteria: iteratee(value, key, list)\n    };\n  }).sort(function(left, right) {\n    var a = left.criteria;\n    var b = right.criteria;\n    if (a !== b) {\n      if (a > b || a === void 0) return 1;\n      if (a < b || b === void 0) return -1;\n    }\n    return left.index - right.index;\n  }), 'value');\n}\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// An internal function used for aggregate \"group by\" operations.\nexport default function group(behavior, partition) {\n  return function(obj, iteratee, context) {\n    var result = partition ? [[], []] : {};\n    iteratee = cb(iteratee, context);\n    each(obj, function(value, index) {\n      var key = iteratee(value, index, obj);\n      behavior(result, value, key);\n    });\n    return result;\n  };\n}\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Groups the object's values by a criterion. Pass either a string attribute\n// to group by, or a function that returns the criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key].push(value); else result[key] = [value];\n});\n","import group from './_group.js';\n\n// Indexes the object's values by a criterion, similar to `_.groupBy`, but for\n// when you know that your index values will be unique.\nexport default group(function(result, value, key) {\n  result[key] = value;\n});\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Counts instances of an object that group by a certain criterion. Pass\n// either a string attribute to count by, or a function that returns the\n// criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key]++; else result[key] = 1;\n});\n","import group from './_group.js';\n\n// Split a collection into two arrays: one whose elements all pass the given\n// truth test, and one whose elements all do not pass the truth test.\nexport default group(function(result, value, pass) {\n  result[pass ? 0 : 1].push(value);\n}, true);\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the number of elements in a collection.\nexport default function size(obj) {\n  if (obj == null) return 0;\n  return isArrayLike(obj) ? obj.length : keys(obj).length;\n}\n","// Internal `_.pick` helper function to determine whether `key` is an enumerable\n// property name of `obj`.\nexport default function keyInObj(value, key, obj) {\n  return key in obj;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport optimizeCb from './_optimizeCb.js';\nimport allKeys from './allKeys.js';\nimport keyInObj from './_keyInObj.js';\nimport flatten from './_flatten.js';\n\n// Return a copy of the object only containing the allowed properties.\nexport default restArguments(function(obj, keys) {\n  var result = {}, iteratee = keys[0];\n  if (obj == null) return result;\n  if (isFunction(iteratee)) {\n    if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n    keys = allKeys(obj);\n  } else {\n    iteratee = keyInObj;\n    keys = flatten(keys, false, false);\n    obj = Object(obj);\n  }\n  for (var i = 0, length = keys.length; i < length; i++) {\n    var key = keys[i];\n    var value = obj[key];\n    if (iteratee(value, key, obj)) result[key] = value;\n  }\n  return result;\n});\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport negate from './negate.js';\nimport map from './map.js';\nimport flatten from './_flatten.js';\nimport contains from './contains.js';\nimport pick from './pick.js';\n\n// Return a copy of the object without the disallowed properties.\nexport default restArguments(function(obj, keys) {\n  var iteratee = keys[0], context;\n  if (isFunction(iteratee)) {\n    iteratee = negate(iteratee);\n    if (keys.length > 1) context = keys[1];\n  } else {\n    keys = map(flatten(keys, false, false), String);\n    iteratee = function(value, key) {\n      return !contains(keys, key);\n    };\n  }\n  return pick(obj, iteratee, context);\n});\n","import { slice } from './_setup.js';\n\n// Returns everything but the last entry of the array. Especially useful on\n// the arguments object. Passing **n** will return all the values in\n// the array, excluding the last N.\nexport default function initial(array, n, guard) {\n  return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n}\n","import initial from './initial.js';\n\n// Get the first element of an array. Passing **n** will return the first N\n// values in the array. The **guard** check allows it to work with `_.map`.\nexport default function first(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[0];\n  return initial(array, array.length - n);\n}\n","import { slice } from './_setup.js';\n\n// Returns everything but the first entry of the `array`. Especially useful on\n// the `arguments` object. Passing an **n** will return the rest N values in the\n// `array`.\nexport default function rest(array, n, guard) {\n  return slice.call(array, n == null || guard ? 1 : n);\n}\n","import rest from './rest.js';\n\n// Get the last element of an array. Passing **n** will return the last N\n// values in the array.\nexport default function last(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[array.length - 1];\n  return rest(array, Math.max(0, array.length - n));\n}\n","import filter from './filter.js';\n\n// Trim out all falsy values from an array.\nexport default function compact(array) {\n  return filter(array, Boolean);\n}\n","import _flatten from './_flatten.js';\n\n// Flatten out an array, either recursively (by default), or up to `depth`.\n// Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\nexport default function flatten(array, depth) {\n  return _flatten(array, depth, false);\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport filter from './filter.js';\nimport contains from './contains.js';\n\n// Take the difference between one array and a number of other arrays.\n// Only the elements present in just the first array will remain.\nexport default restArguments(function(array, rest) {\n  rest = flatten(rest, true, true);\n  return filter(array, function(value){\n    return !contains(rest, value);\n  });\n});\n","import restArguments from './restArguments.js';\nimport difference from './difference.js';\n\n// Return a version of the array that does not contain the specified value(s).\nexport default restArguments(function(array, otherArrays) {\n  return difference(array, otherArrays);\n});\n","import isBoolean from './isBoolean.js';\nimport cb from './_cb.js';\nimport getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce a duplicate-free version of the array. If the array has already\n// been sorted, you have the option of using a faster algorithm.\n// The faster algorithm will not work with an iteratee if the iteratee\n// is not a one-to-one function, so providing an iteratee will disable\n// the faster algorithm.\nexport default function uniq(array, isSorted, iteratee, context) {\n  if (!isBoolean(isSorted)) {\n    context = iteratee;\n    iteratee = isSorted;\n    isSorted = false;\n  }\n  if (iteratee != null) iteratee = cb(iteratee, context);\n  var result = [];\n  var seen = [];\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var value = array[i],\n        computed = iteratee ? iteratee(value, i, array) : value;\n    if (isSorted && !iteratee) {\n      if (!i || seen !== computed) result.push(value);\n      seen = computed;\n    } else if (iteratee) {\n      if (!contains(seen, computed)) {\n        seen.push(computed);\n        result.push(value);\n      }\n    } else if (!contains(result, value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport uniq from './uniq.js';\nimport flatten from './_flatten.js';\n\n// Produce an array that contains the union: each distinct element from all of\n// the passed-in arrays.\nexport default restArguments(function(arrays) {\n  return uniq(flatten(arrays, true, true));\n});\n","import getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce an array that contains every item shared between all the\n// passed-in arrays.\nexport default function intersection(array) {\n  var result = [];\n  var argsLength = arguments.length;\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var item = array[i];\n    if (contains(result, item)) continue;\n    var j;\n    for (j = 1; j < argsLength; j++) {\n      if (!contains(arguments[j], item)) break;\n    }\n    if (j === argsLength) result.push(item);\n  }\n  return result;\n}\n","import max from './max.js';\nimport getLength from './_getLength.js';\nimport pluck from './pluck.js';\n\n// Complement of zip. Unzip accepts an array of arrays and groups\n// each array's elements on shared indices.\nexport default function unzip(array) {\n  var length = (array && max(array, getLength).length) || 0;\n  var result = Array(length);\n\n  for (var index = 0; index < length; index++) {\n    result[index] = pluck(array, index);\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport unzip from './unzip.js';\n\n// Zip together multiple lists into a single array -- elements that share\n// an index go together.\nexport default restArguments(unzip);\n","import getLength  from './_getLength.js';\n\n// Converts lists into objects. Pass either a single array of `[key, value]`\n// pairs, or two parallel arrays of the same length -- one of keys, and one of\n// the corresponding values. Passing by pairs is the reverse of `_.pairs`.\nexport default function object(list, values) {\n  var result = {};\n  for (var i = 0, length = getLength(list); i < length; i++) {\n    if (values) {\n      result[list[i]] = values[i];\n    } else {\n      result[list[i][0]] = list[i][1];\n    }\n  }\n  return result;\n}\n","// Generate an integer Array containing an arithmetic progression. A port of\n// the native Python `range()` function. See\n// [the Python documentation](https://docs.python.org/library/functions.html#range).\nexport default function range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n\n  return range;\n}\n","import { slice } from './_setup.js';\n\n// Chunk a single array into multiple arrays, each containing `count` or fewer\n// items.\nexport default function chunk(array, count) {\n  if (count == null || count < 1) return [];\n  var result = [];\n  var i = 0, length = array.length;\n  while (i < length) {\n    result.push(slice.call(array, i, i += count));\n  }\n  return result;\n}\n","import _ from './underscore.js';\n\n// Helper function to continue chaining intermediate results.\nexport default function chainResult(instance, obj) {\n  return instance._chain ? _(obj).chain() : obj;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport functions from './functions.js';\nimport { push } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add your own custom functions to the Underscore object.\nexport default function mixin(obj) {\n  each(functions(obj), function(name) {\n    var func = _[name] = obj[name];\n    _.prototype[name] = function() {\n      var args = [this._wrapped];\n      push.apply(args, arguments);\n      return chainResult(this, func.apply(_, args));\n    };\n  });\n  return _;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport { ArrayProto } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add all mutator `Array` functions to the wrapper.\neach(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) {\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) {\n        delete obj[0];\n      }\n    }\n    return chainResult(this, obj);\n  };\n});\n\n// Add all accessor `Array` functions to the wrapper.\neach(['concat', 'join', 'slice'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) obj = method.apply(obj, arguments);\n    return chainResult(this, obj);\n  };\n});\n\nexport default _;\n","// Default Export\n// ==============\n// In this module, we mix our bundled exports into the `_` object and export\n// the result. This is analogous to setting `module.exports = _` in CommonJS.\n// Hence, this module is also the entry point of our UMD bundle and the package\n// entry point for CommonJS and AMD users. In other words, this is (the source\n// of) the module you are interfacing with when you do any of the following:\n//\n// ```js\n// // CommonJS\n// var _ = require('underscore');\n//\n// // AMD\n// define(['underscore'], function(_) {...});\n//\n// // UMD in the browser\n// // _ is available as a global variable\n// ```\nimport * as allExports from './index.js';\nimport { mixin } from './index.js';\n\n// Add all of the Underscore functions to the wrapper object.\nvar _ = mixin(allExports);\n// Legacy Node.js API.\n_._ = _;\n// Export the Underscore API.\nexport default _;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}